### set log levels ###
log_home=../logs
log4j.rootLogger = info , stdout , D , E

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %5p ] %c{1}:%L - %m%n
log4j.appender.FILE.Encoding=UTF-8
###显示SQL语句部分 打印级别改为debug
#log4j.logger.com.ibatis=debug
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
#log4j.logger.java.sql.Connection=debug
#log4j.logger.java.sql.Statement=debug
#log4j.logger.java.sql.PreparedStatement=debug


### ============================输出到日志文件 ========================
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.D.File = ${log_home}/logs/sync_log.log
log4j.appender.D.DatePattern='.'yyyy-MM-dd
log4j.appender.D.Encoding=UTF-8
 
## 输出DEBUG级别以上的日志
log4j.appender.D.Threshold = DEBUG 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%l] [ %t:%r ] - [ %p ] %m%n

### ==================保存异常信息到单独文件 ====================
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
## 异常日志文件名
log4j.appender.E.File =${log_home}/logs/sync_error.log
log4j.appender.E.DatePattern='.'yyyy-MM-dd
log4j.appender.E.Encoding=UTF-8
##只输出ERROR级别以上的日志!!!
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%l] [ %t:%r ] - [ %p ] %m%n

#logger.debug( " debug " );
#logger.error( " error " );